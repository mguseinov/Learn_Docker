# Декораторы в Python — это функции или конструкции, которые позволяют модифицировать поведение другой функции, метода или класса,
# не изменяя их исходный код. Это один из ключевых инструментов для написания гибкого, читаемого и повторно используемого кода.


def my_decorator(func):
    def wrapper():
        print("Декоратор: до выполнения функции")
        func()
        print("Декоратор: после выполнения функции")
    return wrapper

@my_decorator  # Применение декоратора
def say_hello():
    print("Привет, мир!")

say_hello()


"""sdf
sdf
sd
fs
df
sfd"""

    